@using BookVerse.Models
@model User

@{
    Layout = "/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Collections</title>
    <link href="/css/user-css/collections.css" rel="stylesheet">
    <link href="/css/user-css/book-details.css" rel="stylesheet" />
</head>
<body>
    <div id="content-container">
        <div class="header">
            <select id="collection-select"></select>

            <div class="icon">
                <div class="account">
                    <img src="https://cdn-icons-png.flaticon.com/512/3135/3135768.png" alt="User Avatar">
                    <h4>@Model.Name</h4>
                </div>
            </div>
        </div>
        <section class="books">
            <ul id="bookList">
                @*Books will dynamically appear here**@
            </ul>
        </section>
    </div>

    <!-- Hidden input field to store user ID -->
    <input type="hidden" id="userId" name="userId" value="@Model.Id">

    @*Details about a specific book*@
    <div id="book-details" style="display: none;">
        <div class="book-header">
            <img src="#" alt="Book Cover" id="book-image" />
            <div class="book-info">
                <p id="book-id" hidden=""></p>
                <h1 id="book-title"></h1>
                <p id="book-author"></p>
                <p><strong>Subjects:</strong> <span id="book-subjects"></span></p>
                <p><strong>Bookshelves:</strong> <span id="book-bookshelves"></span></p>
                <p><strong>Language(s):</strong> <span id="book-languages"></span></p>

                <a href="#" id="book-content" target="_blank">
                    <input type="button" value="Read" />
                </a>
            </div>
        </div>
        <section>
            <h3>Description:</h3>
            <p id="book-description"></p>
        </section>
        <button class="close" type="button" onclick="closeBookDetails()"></button>
    </div>

    <script src="~/js/user-panel/bookDetails.js"></script>
    <script>
        const userId = document.getElementById('userId').value;

        async function PickCollection() {
            const response = await fetch(`/api/collections/?userId=${userId}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                },
            });
            const data = await response.json();

            const collectionSelectElement = document.getElementById('collection-select');
            collectionSelectElement.innerHTML = '<option value="">Select a Collection</option>';

            data.forEach(collection => {
                const option = document.createElement('option');
                option.value = collection.id;
                option.textContent = collection.title;
                collectionSelectElement.appendChild(option);
            });

            // Attach an event listener to the select element
            collectionSelectElement.addEventListener('change', async (event) => {
                const selectedCollectionId = event.target.value;
                await fetchBooksFromCollection(selectedCollectionId);
            });
        }

        async function fetchBooksFromCollection(collectionId) {
            const response = await fetch(`/api/collection/books?collectionId=${collectionId}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                },
            });

            if (response.ok) {
                const books = await response.json();
                const booksListElement = document.getElementById('bookList');
                booksListElement.innerHTML = ''; // Clear previous results

                books.forEach(book => {
                    const bookElement = createBookElement(book);
                    booksListElement.appendChild(bookElement);
                });
            } else {
                console.error('Failed to fetch books from the collection.');
            }
        }

        function createBookElement(bookData) {
            const bookItem = document.createElement('li');
            bookItem.className = 'book';

            const bookImage = document.createElement('img');
            bookImage.src = bookData.formats['image/jpeg'];
            bookImage.alt = 'Audio Book';

            const bookTitle = document.createElement('h3');
            bookTitle.textContent = bookData.title;

            const bookAuthor = document.createElement('p');
            const authors = bookData.authors && bookData.authors.length > 0 ? bookData.authors.reduce((acc, author) => acc + ', ' + author.name, '').slice(2) : 'Undefined';
            bookAuthor.textContent = authors;

            bookItem.append(bookImage, bookTitle, bookAuthor);

            bookItem.addEventListener('click', () => redirectToBookDetails(bookData, authors));

            return bookItem;
        }

        // Call the PickCollection function when the page loads
        document.addEventListener('DOMContentLoaded', async () => {
            await PickCollection();
        });
    </script>
</body>
</html>
